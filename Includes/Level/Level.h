#pragma once

#include "Core.h"
#include <vector>	// ??? ???? ??????? ???? ?עק
#include "RTTI.h"
#include "Math/Vector3.h"

class Actor;
class Engine_API Level : public RTTI
{
	RTTI_DECLARATIONS(Level, RTTI)
public:
	Level();
	virtual ~Level();

	// ?????? ????? ????? ?? ???
	void AddActor(Actor* newActor);

	// ???? ???? ???
	void DestroyActor(Actor* destroyedActor);

	// ???? ???? ???
	virtual void OnInit();
	virtual void OnUpdate();
	virtual void OnRender();

	// ??? ?? ???? ????? ????? ?????? ???
	void ProcessAddAndDestroyActors();

protected:
	// ?????? ????? ??? ????? ??????? ?עק
	std::vector<Actor*> actors;

	// ??? ????? ????? ??????? ?עק
	std::vector<Actor*> addRequestedActors;

	// ???? ????? ????? ??????? ?עק
	std::vector<Actor*> destroyRequestedActors;
};